{"ast":null,"code":"var _jsxFileName = \"/Users/fouxan/Personal/whistleblower/src/components/SelectionView.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFetchData } from \"../hooks/useFetchData\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectionView = () => {\n  _s();\n  var _data$docs;\n  // Using react-hook-form for form handling and validation\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [shouldFetch, setShouldFetch] = React.useState(false);\n  const [formData, setFormData] = React.useState({\n    question: \"\",\n    folder: \"\",\n    numDocs: \"\"\n  });\n  const {\n    data,\n    isLoading,\n    isError,\n    reload\n  } = useFetchData(formData, shouldFetch);\n\n  // handleSubmit is provided by react-hook-form\n  const onSubmit = data => {\n    setFormData(data); // Update formData with the submitted values\n    setShouldFetch(true); // Trigger data fetching\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"question\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"question\",\n            type: \"text\",\n            placeholder: \"Enter your question\",\n            ...register(\"question\", {\n              required: \"Question is required\",\n              minLength: {\n                value: 5,\n                message: \"Question should be at least 5 characters\"\n              }\n            }),\n            className: \"custom-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), errors.question && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.question.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"folder\",\n            children: \"Select Client Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"folder\",\n            ...register(\"folder\", {\n              required: \"Please select a folder\"\n            }),\n            className: \"custom-select\",\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"default-folder\",\n              children: \"Default folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), errors.folder && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.folder.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numDocs\",\n            children: \"Select Number of Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"numDocs\",\n            ...register(\"numDocs\", {\n              required: \"Please select the number of documents\"\n            }),\n            className: \"custom-select\",\n            children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), errors.numDocs && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.numDocs.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oops! Something went wrong. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retry-button\",\n        onClick: reload,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doc-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Retrieving docs...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doc\",\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 200,\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doc-info\",\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              width: 100,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: 100,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: 100,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"GPT Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          count: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this) : data !== null && data !== void 0 && (_data$docs = data.docs) !== null && _data$docs !== void 0 && _data$docs.length || data !== null && data !== void 0 && data.gptAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doc-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Docs retrieved:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), data.docs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No documents found for the selected folder.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this) : data.docs.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doc\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: doc.snippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doc-info\",\n            children: [doc.filePath && /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"File path: \", doc.filePath]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 45\n            }, this), doc.batesNumber && /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Bates number: \", doc.batesNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 45\n            }, this), doc.pageNumber && /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Page number: \", doc.pageNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }, this)]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-response\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"GPT Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.gptAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectionView, \"xi7pfsxy29p7pd5e1B7gv5vJBuc=\", false, function () {\n  return [useForm, useFetchData];\n});\n_c = SelectionView;\nexport default SelectionView;\nvar _c;\n$RefreshReg$(_c, \"SelectionView\");","map":{"version":3,"names":["React","useForm","useFetchData","Skeleton","jsxDEV","_jsxDEV","SelectionView","_s","_data$docs","register","handleSubmit","formState","errors","shouldFetch","setShouldFetch","useState","formData","setFormData","question","folder","numDocs","data","isLoading","isError","reload","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","required","minLength","value","message","Array","map","_","i","onClick","width","height","count","docs","length","gptAnswer","doc","snippet","filePath","batesNumber","pageNumber","_c","$RefreshReg$"],"sources":["/Users/fouxan/Personal/whistleblower/src/components/SelectionView.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFetchData } from \"../hooks/useFetchData\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport \"../App.css\";\n\nconst SelectionView = () => {\n    // Using react-hook-form for form handling and validation\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [shouldFetch, setShouldFetch] = React.useState(false);\n    const [formData, setFormData] = React.useState({\n        question: \"\",\n        folder: \"\",\n        numDocs: \"\",\n    });\n\n    const { data, isLoading, isError, reload } = useFetchData(\n        formData,\n        shouldFetch\n    );\n\n    // handleSubmit is provided by react-hook-form\n    const onSubmit = (data) => {\n        setFormData(data); // Update formData with the submitted values\n        setShouldFetch(true); // Trigger data fetching\n    };\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"input-section\">\n                    <div className=\"input-field\">\n                        <label htmlFor=\"question\">Question</label>\n                        <input\n                            id=\"question\"\n                            type=\"text\"\n                            placeholder=\"Enter your question\"\n                            {...register(\"question\", {\n                                required: \"Question is required\",\n                                minLength: {\n                                    value: 5,\n                                    message:\n                                        \"Question should be at least 5 characters\",\n                                },\n                            })}\n                            className=\"custom-input\"\n                        />\n                        {errors.question && (\n                            <span className=\"error-message\">\n                                {errors.question.message}\n                            </span>\n                        )}\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"folder\">Select Client Folder</label>\n                        <select\n                            id=\"folder\"\n                            {...register(\"folder\", {\n                                required: \"Please select a folder\",\n                            })}\n                            className=\"custom-select\"\n                        >\n                            <option value=\"default-folder\">\n                                Default folder\n                            </option>\n                        </select>\n                        {errors.folder && (\n                            <span className=\"error-message\">\n                                {errors.folder.message}\n                            </span>\n                        )}\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"numDocs\">\n                            Select Number of Documents\n                        </label>\n                        <select\n                            id=\"numDocs\"\n                            {...register(\"numDocs\", {\n                                required:\n                                    \"Please select the number of documents\",\n                            })}\n                            className=\"custom-select\"\n                        >\n                            {[...Array(10)].map((_, i) => (\n                                <option key={i + 1} value={i + 1}>\n                                    {i + 1}\n                                </option>\n                            ))}\n                        </select>\n                        {errors.numDocs && (\n                            <span className=\"error-message\">\n                                {errors.numDocs.message}\n                            </span>\n                        )}\n                    </div>\n                </div>\n                <div className=\"submit-section\">\n                    <button className=\"submit-button\" type=\"submit\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n            {isError ? (\n                <div className=\"error-message\">\n                    <p>Oops! Something went wrong. Please try again later.</p>\n                    <button className=\"retry-button\" onClick={reload}>\n                        Retry\n                    </button>\n                </div>\n            ) : isLoading ? (\n                <div className=\"response-section\">\n                    <div className=\"doc-response\">\n                        <h3>\n                            <u>Retrieving docs...</u>\n                        </h3>\n                        {[...Array(3)].map((_, i) => (\n                            <div className=\"doc\" key={i}>\n                                <Skeleton width={200} height={30} />\n                                <div className=\"doc-info\">\n                                    <Skeleton width={100} height={20} />\n                                    <Skeleton width={100} height={20} />\n                                    <Skeleton width={100} height={20} />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"answer-response\">\n                        <h3>\n                            <u>GPT Answer:</u>\n                        </h3>\n                        <Skeleton count={5} />\n                    </div>\n                </div>\n            ) : data?.docs?.length || data?.gptAnswer ? (\n                <div className=\"response-section\">\n                    <div className=\"doc-response\">\n                        <h3>\n                            <u>Docs retrieved:</u>\n                        </h3>\n                        {data.docs.length === 0 ? (\n                            <p>No documents found for the selected folder.</p>\n                        ) : (\n                            data.docs.map((doc) => (\n                                <div className=\"doc\" key={doc.id}>\n                                    <h2>{doc.snippet}</h2>\n                                    <div className=\"doc-info\">\n                                        {doc.filePath && (\n                                            <h4>File path: {doc.filePath}</h4>\n                                        )}\n                                        {doc.batesNumber && (\n                                            <h4>\n                                                Bates number: {doc.batesNumber}\n                                            </h4>\n                                        )}\n                                        {doc.pageNumber && (\n                                            <h4>\n                                                Page number: {doc.pageNumber}\n                                            </h4>\n                                        )}\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n                    <div className=\"answer-response\">\n                        <h3>\n                            <u>GPT Answer:</u>\n                        </h3>\n                        <p>{data.gptAnswer}</p>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default SelectionView;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,0CAA0C;AACjD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,UAAA;EACxB;EACA,MAAM;IACFC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAGX,OAAO,CAAC,CAAC;EACb,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,KAAK,CAACe,QAAQ,CAAC;IAC3CG,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGtB,YAAY,CACrDc,QAAQ,EACRH,WACJ,CAAC;;EAED;EACA,MAAMY,QAAQ,GAAIJ,IAAI,IAAK;IACvBJ,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;IACnBP,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIT,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBtB,OAAA;MAAMoB,QAAQ,EAAEf,YAAY,CAACe,QAAQ,CAAE;MAAAE,QAAA,gBACnCtB,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BtB,OAAA;UAAKqB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBtB,OAAA;YAAOuB,OAAO,EAAC,UAAU;YAAAD,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1C3B,OAAA;YACI4B,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,qBAAqB;YAAA,GAC7B1B,QAAQ,CAAC,UAAU,EAAE;cACrB2B,QAAQ,EAAE,sBAAsB;cAChCC,SAAS,EAAE;gBACPC,KAAK,EAAE,CAAC;gBACRC,OAAO,EACH;cACR;YACJ,CAAC,CAAC;YACFb,SAAS,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,EACDpB,MAAM,CAACM,QAAQ,iBACZb,OAAA;YAAMqB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1Bf,MAAM,CAACM,QAAQ,CAACqB;UAAO;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEN3B,OAAA;UAAKqB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBtB,OAAA;YAAOuB,OAAO,EAAC,QAAQ;YAAAD,QAAA,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD3B,OAAA;YACI4B,EAAE,EAAC,QAAQ;YAAA,GACPxB,QAAQ,CAAC,QAAQ,EAAE;cACnB2B,QAAQ,EAAE;YACd,CAAC,CAAC;YACFV,SAAS,EAAC,eAAe;YAAAC,QAAA,eAEzBtB,OAAA;cAAQiC,KAAK,EAAC,gBAAgB;cAAAX,QAAA,EAAC;YAE/B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EACRpB,MAAM,CAACO,MAAM,iBACVd,OAAA;YAAMqB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1Bf,MAAM,CAACO,MAAM,CAACoB;UAAO;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEN3B,OAAA;UAAKqB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBtB,OAAA;YAAOuB,OAAO,EAAC,SAAS;YAAAD,QAAA,EAAC;UAEzB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR3B,OAAA;YACI4B,EAAE,EAAC,SAAS;YAAA,GACRxB,QAAQ,CAAC,SAAS,EAAE;cACpB2B,QAAQ,EACJ;YACR,CAAC,CAAC;YACFV,SAAS,EAAC,eAAe;YAAAC,QAAA,EAExB,CAAC,GAAGa,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACrBtC,OAAA;cAAoBiC,KAAK,EAAEK,CAAC,GAAG,CAAE;cAAAhB,QAAA,EAC5BgB,CAAC,GAAG;YAAC,GADGA,CAAC,GAAG,CAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EACRpB,MAAM,CAACQ,OAAO,iBACXf,OAAA;YAAMqB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1Bf,MAAM,CAACQ,OAAO,CAACmB;UAAO;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN3B,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BtB,OAAA;UAAQqB,SAAS,EAAC,eAAe;UAACQ,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAEhD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACNT,OAAO,gBACJlB,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BtB,OAAA;QAAAsB,QAAA,EAAG;MAAmD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1D3B,OAAA;QAAQqB,SAAS,EAAC,cAAc;QAACkB,OAAO,EAAEpB,MAAO;QAAAG,QAAA,EAAC;MAElD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,GACNV,SAAS,gBACTjB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BtB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,eACItB,OAAA;YAAAsB,QAAA,EAAG;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,EACJ,CAAC,GAAGQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACpBtC,OAAA;UAAKqB,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAChBtB,OAAA,CAACF,QAAQ;YAAC0C,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE;UAAG;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpC3B,OAAA;YAAKqB,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACrBtB,OAAA,CAACF,QAAQ;cAAC0C,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE;YAAG;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpC3B,OAAA,CAACF,QAAQ;cAAC0C,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE;YAAG;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpC3B,OAAA,CAACF,QAAQ;cAAC0C,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE;YAAG;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA,GANgBW,CAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOtB,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN3B,OAAA;QAAKqB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BtB,OAAA;UAAAsB,QAAA,eACItB,OAAA;YAAAsB,QAAA,EAAG;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACL3B,OAAA,CAACF,QAAQ;UAAC4C,KAAK,EAAE;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,GACNX,IAAI,aAAJA,IAAI,gBAAAb,UAAA,GAAJa,IAAI,CAAE2B,IAAI,cAAAxC,UAAA,eAAVA,UAAA,CAAYyC,MAAM,IAAI5B,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE6B,SAAS,gBACrC7C,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BtB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,eACItB,OAAA;YAAAsB,QAAA,EAAG;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACJX,IAAI,CAAC2B,IAAI,CAACC,MAAM,KAAK,CAAC,gBACnB5C,OAAA;UAAAsB,QAAA,EAAG;QAA2C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAElDX,IAAI,CAAC2B,IAAI,CAACP,GAAG,CAAEU,GAAG,iBACd9C,OAAA;UAAKqB,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAChBtB,OAAA;YAAAsB,QAAA,EAAKwB,GAAG,CAACC;UAAO;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB3B,OAAA;YAAKqB,SAAS,EAAC,UAAU;YAAAC,QAAA,GACpBwB,GAAG,CAACE,QAAQ,iBACThD,OAAA;cAAAsB,QAAA,GAAI,aAAW,EAACwB,GAAG,CAACE,QAAQ;YAAA;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACpC,EACAmB,GAAG,CAACG,WAAW,iBACZjD,OAAA;cAAAsB,QAAA,GAAI,gBACc,EAACwB,GAAG,CAACG,WAAW;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CACP,EACAmB,GAAG,CAACI,UAAU,iBACXlD,OAAA;cAAAsB,QAAA,GAAI,eACa,EAACwB,GAAG,CAACI,UAAU;YAAA;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAhBgBmB,GAAG,CAAClB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiB3B,CACR,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACN3B,OAAA;QAAKqB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BtB,OAAA;UAAAsB,QAAA,eACItB,OAAA;YAAAsB,QAAA,EAAG;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACL3B,OAAA;UAAAsB,QAAA,EAAIN,IAAI,CAAC6B;QAAS;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,GACN,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACzB,EAAA,CA/KID,aAAa;EAAA,QAMXL,OAAO,EAQkCC,YAAY;AAAA;AAAAsD,EAAA,GAdvDlD,aAAa;AAiLnB,eAAeA,aAAa;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}